apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-ingress-https
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: dev-sandbox-errorpage@kubernetescrd, dev-sandbox-https-redirect@kubernetescrd
spec:
  tls:
    - hosts: 
      - "$(VC_PLATFORM_SERVICE).$(VC_NAMESPACE).govirto.com"
      secretName: platfrom-tls
    - hosts:   
      - "$(VC_STOREFRONT_SERVICE).$(VC_NAMESPACE).govirto.com"
      secretName: sandbox-storefront-tls
  rules:
  - host: $(VC_STOREFRONT_SERVICE).$(VC_NAMESPACE).govirto.com
    http:
      paths:
      - backend:
          serviceName: storefront
          servicePort: 80
        path: /
  - host: $(VC_PLATFORM_SERVICE).$(VC_NAMESPACE).govirto.com
    http:
      paths:
      - backend:
          serviceName: platform
          servicePort: 80
        path: /
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-ingress-http
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.middlewares: dev-sandbox-errorpage@kubernetescrd, dev-sandbox-https-redirect@kubernetescrd
spec:
  rules:
  - host: $(VC_STOREFRONT_SERVICE).$(VC_NAMESPACE).govirto.com
    http:
      paths:
      - backend:
          serviceName: storefront
          servicePort: 80
        path: /
  - host: $(VC_PLATFORM_SERVICE).$(VC_NAMESPACE).govirto.com
    http:
      paths:
      - backend:
          serviceName: platform
          servicePort: 80
        path: /