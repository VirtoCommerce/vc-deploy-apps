apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
spec:
  replicas: 1
  template:
    # metadata:
    #   annotations:
    #     argocd.argoproj.io/sync-wave: "1"
    spec:
      initContainers:
        - name: init-sqldatabase
          image: mcr.microsoft.com/mssql-tools
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "echo START INITSQL $(date +%Y-%m-%d-%H-%M-%S)
               && /opt/mssql-tools/bin/sqlcmd -S vc-dev-dbserver.database.windows.net -U virto@vc-dev-dbserver -P $(VC_DBSERVER_MASTER_PASSWORD) -q
               \"CREATE DATABASE [$(VC_PLATFORM_SERVICE)_$(VC_NAMESPACE)] $(VC_DB_COPY_PARAM) ( SERVICE_OBJECTIVE = ELASTIC_POOL ( name = [vc-dev-elasticpool] ) )\"
               && echo INITSQL COMPLETE $(date +%Y-%m-%d-%H-%M-%S)"
          env:
            - name: VC_SAMPLE_DATA_DB
              value: public-platform_demo_src
            - name: VC_DB_COPY_PARAM
              value: "AS COPY OF [$(VC_SAMPLE_DATA_DB)]"  
            - name: VC_DBSERVER_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vc-dbserver-password
                  key: password
      containers:
        - name: vc-platform-web
          env:
            - name: ConnectionStrings__VirtoCommerce
              value: "Server=tcp:vc-dev-dbserver.database.windows.net,1433;Database=$(VC_PLATFORM_SERVICE)_$(VC_NAMESPACE);User ID=virto@vc-dev-dbserver;Password=$(VC_DBSERVER_PASSWORD);Trusted_Connection=False;Encrypt=True;Connect Timeout=120"


  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate            