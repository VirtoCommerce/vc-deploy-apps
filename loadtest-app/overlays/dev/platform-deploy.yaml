apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
  labels:
    k8s-app: loadtest-platform
spec:
  revisionHistoryLimit: 2
  template:
    metadata:
        annotations:
          vault.hashicorp.com/agent-init-first: "true"
          vault.hashicorp.com/agent-configmap: "loadtest-platform-secret-configmap"
          vault.hashicorp.com/agent-requests-cpu: "25m"
          vault.hashicorp.com/agent-limits-cpu: "55m"
          linkerd.io/inject: enabled
          config.linkerd.io/proxy-cpu-limit: "500m"
          config.linkerd.io/proxy-cpu-request: "50m"
        labels:
          k8s-app: loadtest-platform   
    spec:
      initContainers:

        - name: init-platform
          resources:
            limits:
              #cpu: 1750m
              memory: 512Mi
            requests:
              #cpu: 500m
              memory: 512Mi
          image: docker.pkg.github.com/virtocommerce/vc-deploy-containers/platform-installer:v2
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "echo START INIT $(date +%Y-%m-%d-%H-%M-%S) 
            && python3 install-modules.py \"$MODULES_CONFIG\" /mnt/Modules/*
            && echo MODULES INSTALLED $(date +%Y-%m-%d-%H-%M-%S)"
        # - name: init-sqldatabase
        #   env:
        #     - name: VC_SAMPLE_DATA_DB
        #       value: webstore-platform_source
      containers:
        - name: vc-platform-web
          readinessProbe:
            httpGet:
              path: /
              port: 80
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 1
          resources:
            limits:
              cpu: "500m"
              memory: 512Mi
            requests:
              cpu: "50m"
          volumeMounts:
          - mountPath: "/opt/virtocommerce/platform/wwwroot/cms-content"
            name: cms-content-data
          - mountPath: "/opt/virtocommerce/platform/modules"
            name: modules-data
      volumes:
      - name: cms-content-data
        persistentVolumeClaim:
          claimName: cms-content-volume
      - name: modules-data
        emptyDir: {}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
          
