apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "myapp"
        vault.hashicorp.com/agent-inject-secret-api: "secret/notifications"
        vault.hashicorp.com/agent-inject-template-api: |
          {{- with secret "secret/notifications" -}}
          export Notifications__SendGrid__ApiKey="{{ .Data.apikey }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-spass: "secret/notifications"
        vault.hashicorp.com/agent-inject-template-spass: |
          {{- with secret "secret/notifications" -}}
          export Notifications__Smtp__Password="{{ .Data.password }}"
          {{- end }}
        reloader.stakater.com/search: "true"
    spec:
      initContainers:
        - name: init-platform
          image: docker.pkg.github.com/virtocommerce/vc-deploy-containers/platform-installer:dev-test
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "echo START INIT $(date +%Y-%m-%d-%H-%M-%S) 
            && python3 install-modules.py \"$MODULES_CONFIG\" /mnt/Modules/*
            && if [ ! -d \"$ELECTRONICS_THEME_LOCATION\" ]; then mkdir -p \"$ELECTRONICS_THEME_LOCATION\"; fi            
            && python3 install-theme.py $(ELECTRONICS_THEME_URL) $(ELECTRONICS_THEME_LOCATION)
            && echo ELECTRONICS THEME INSTALLED $(date +%Y-%m-%d-%H-%M-%S)
            && if [ ! -d \"$B2B_THEME_LOCATION\" ]; then mkdir -p \"$B2B_THEME_LOCATION\"; fi            
            && python3 install-theme.py $(B2B_THEME_URL) $(B2B_THEME_LOCATION)
            && echo B2B THEME INSTALLED $(date +%Y-%m-%d-%H-%M-%S)
            && python3 upload-assets.py $(ASSETS_URL) $(ASSETS_LOCATION)
            && echo ASSETS INSTALLED $(date +%Y-%m-%d-%H-%M-%S)"
          envFrom:
            - configMapRef:
                name: deployment-cm
          env:
            - name: MODULES_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: deployment-cm
                  key: modules.json
          volumeMounts:
            - mountPath: /mnt/Modules
              name: modules-data
            - mountPath: /mnt/cms-content
              name: cms-content-data
          imagePullPolicy: Always     

        - name: init-sqldatabase
          env:
            - name: VC_SAMPLE_DATA_DB
              value: webstore-platform_source          

      containers:
        - name: vc-platform-web
          resources:
            requests:
              memory: "512Mi"
            limits:
              memory: "768Mi" 
          command:
            - "/bin/bash"
            - "-c"
          args:
            - "cat /vault/secrets/api >> /vault/secrets/config;
              cat /vault/secrets/spass >> /vault/secrets/config;
              source /vault/secrets/config && dotnet VirtoCommerce.Platform.Web.dll" 
          envFrom:
            - configMapRef:
                name: environment-cm     
          env:
            - name: APPINSIGHTS_INSTRUMENTATIONKEY
              value: 4122074c-f2ad-489b-811f-d557350fb644  
            - name: ConnectionStrings__RedisConnectionString
              value: "redis-master.redis:6379,password=$(REDIS_PASS),ssl=False,abortConnect=False" 
            - name: Caching__Redis__ChannelName
              value: "$(VC_PLATFORM_SERVICE)-$(VC_NAMESPACE)-chanel"
          volumeMounts:
            - mountPath: "/opt/virtocommerce/platform/wwwroot/cms-content"
              name: cms-content-data
      volumes:
        - name: cms-content-data
          persistentVolumeClaim:
            claimName: cms-content-nfs       
