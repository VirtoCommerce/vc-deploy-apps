apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: platform
spec:
  replicas: 4
  revisionHistoryLimit: 2
  template:
    metadata:
        annotations:
          vault.hashicorp.com/agent-init-first: "true"
          vault.hashicorp.com/agent-configmap: "loadtest-platform-secret-configmap"
          vault.hashicorp.com/agent-requests-cpu: "25m"
          vault.hashicorp.com/agent-limits-cpu: "55m"
          vault.hashicorp.com/agent-inject: "true"
          vault.hashicorp.com/agent-pre-populate-only: "true"
          #linkerd.io/inject: enabled
          #config.linkerd.io/proxy-log-level: debug
          #config.linkerd.io/enable-debug-sidecar: "true"
          #config.linkerd.io/opaque-ports: "80"
          # config.linkerd.io/proxy-cpu-limit: "50m"
          # config.linkerd.io/proxy-cpu-request: "5m"
    spec:
      imagePullSecrets:
      - name: dockerconfigjson-github-com
      terminationGracePeriodSeconds: 180
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - loadtest-platform
              topologyKey: topology.kubernetes.io/zone
      initContainers:
        - name: init-platform
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
          image: ghcr.io/virtocommerce/vc-deploy-containers/platform-installer:v3
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "echo START INIT $(date +%Y-%m-%d-%H-%M-%S) 
            && python3 install-modules.py \"$MODULES_CONFIG\" /mnt/Modules/*
            && echo MODULES INSTALLED $(date +%Y-%m-%d-%H-%M-%S)"
          envFrom:
          - configMapRef:
              name: deployment-cm
          env:
            - name: MODULES_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: deployment-cm
                  key: modules.json 
          volumeMounts:
            - mountPath: /mnt/Modules
              name: modules-data
        # - name: init-sqldatabase
        #   env:
        #     - name: VC_SAMPLE_DATA_DB
        #       value: webstore-platform_source
      containers:
        - name: loadtest-platform
          image: docker.pkg.github.com/virtocommerce/vc-platform/platform:dev-linux-latest
          envFrom:
          - configMapRef:
              name: platform-cm
          env:
          - name: ConnectionStrings__VirtoCommerce
            value: "Server=tcp:$(VC_DB_HOST),1433;Database=$(VC_PLATFORM_SERVICE)_$(VC_NAMESPACE);User ID=$(VC_INSTANCE)_$(VC_NAMESPACE)_user@$(VC_DB_HOST);Password=$(VC_DB_PASSWORD);Trusted_Connection=True;Encrypt=True;TrustServerCertificate=True;"
          command:
              - "/bin/bash"
              - "-c"
          args:
              - "source /vault/secrets/config_base && source /vault/secrets/config_custom && dotnet VirtoCommerce.Platform.Web.dll"
          # startupProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #     httpHeaders:
          #       - name: Host
          #         value: loadtest-platform.dev.govirto.com
          #   failureThreshold: 30
          #   successThreshold: 1
          #   initialDelaySeconds: 20
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #   failureThreshold: 10
          #   successThreshold: 1
          #   initialDelaySeconds: 10
          #   periodSeconds: 1
          resources:
            limits:
              cpu: "100m"
              memory: 1024Mi
            requests:
              cpu: "50m"
              memory: 512Mi
          volumeMounts:
          - mountPath: "/opt/virtocommerce/platform/wwwroot/cms-content"
            name: cms-content-data
          - mountPath: "/opt/virtocommerce/platform/modules"
            name: modules-data
      volumes:
      - name: cms-content-data
        persistentVolumeClaim:
          claimName: cms-content-volume
      - name: modules-data
        emptyDir: {}
  strategy:
    blueGreen:
      activeService: platform
          
